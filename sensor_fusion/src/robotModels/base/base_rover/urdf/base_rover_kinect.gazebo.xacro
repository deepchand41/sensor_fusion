<?xml version="1.0"?>

<!-- some links:
  realsense d415 features:
  https://www.framos.com/en/depth-camera-d415-starter-kit-20745?gclid=EAIaIQobChMIkvT-tpbu7wIV23wrCh3kDAV8EAAYASAAEgIDAvD_BwE 

  By: Subash Ghimire
  
-->
<robot name="base_rover_sim" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- configuration parameters are listed below -->
  <xacro:arg name="laser_visual" default="false" />
  <xacro:arg name="imu_visual" default="false" />
  <xacro:property name="publish_pointcloud" value="true" />

  <!-- Select which depth sensor to use -->
  <xacro:property name="use_realsense" value="false" />
  <xacro:property name="use_kinect" value="false" />

  <gazebo reference="base_footprint">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/brown</material>
    <kp>1e+10</kp>
    <kd>10.0</kd>
  </gazebo>

  <gazebo reference="left_wheel">
    <mu1>1.16</mu1>
    <mu2>1.16</mu2>
    <kp>1e+10</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 1 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="right_wheel">
    <mu1>1.16</mu1>
    <mu2>1.16</mu2>
    <kp>1e+10</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 1 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_1">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_2">
    <!-- Coeff. of friction for rubber is 1.16 -->
    <mu1>1.16</mu1>
    <mu2>1.16</mu2>
    <!-- kp and kd determine rigidity of material -->
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/caster_2</material>
  </gazebo>

  <!-- A plugin for implementing the differential drive in gazebo simulation -->
  <gazebo>
    <plugin name="base_rover_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>20</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.320</wheelSeparation>
      <wheelDiameter>0.096</wheelDiameter>
      <wheelAcceleration>2</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>

  <!-- Lidar plugin emulator and adding sensor to lidar frame in a single gazebo tag -->
  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>6</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_footprint</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <!-- RGBD Camera -->
  <!-- <gazebo reference="${reference_link}"> -->
  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="camera1">
      <always_on>1</always_on>
      <!-- <update_rate>5.0</update_rate> -->
      <visualize>false</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <!-- <width>1920</width>
            <height>1080</height> -->
          <format>R8G8B8</format>
        </image>
        <depth_camera></depth_camera>
        <clip>
          <near>0.1</near>
          <far>20</far>
        </clip>
      </camera>

      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>

        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>

        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>

</robot>
